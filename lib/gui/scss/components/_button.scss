/*
 * Copyright 2016 Resin.io
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

.btn {
  padding: 10px;
  padding-top: 11px;

  border-radius: 2px;
  border: none;

  letter-spacing: 0.5px;
  outline: none;

  position: relative;

  &[disabled] {
    background-color: $btn-disabled;
    color: $color-disabled;
    pointer-events: none;

    &:hover {
      background-color: lighten($btn-disabled, 2);
    }
  }
}

.btn-brick {
  min-width: $btn-min-width;
}

.btn-sm {
  font-size: 10px;
  padding: 4px 12px;
}

.btn > .glyphicon {
  top: 2px;
  margin-right: 2px;
}

// Create map from Bootstrap `.btn` type styles
// since its not possible to perform variable
// interpolation (e.g: `$btn-${type}-bg`).
// See https://github.com/sass/sass/issues/132
$btn-types-styles: (
  default: (
    bg: $btn-default-bg,
    color: $btn-default-color,
    border: $btn-default-border
  ),
  primary: (
    bg: $btn-primary-bg,
    color: $btn-primary-color,
    border: $btn-primary-border
  ),
  success: (
    bg: $btn-success-bg,
    color: $btn-success-color,
    border: $btn-success-border
  ),
  info: (
    bg: $btn-info-bg,
    color: $btn-info-color,
    border: $btn-info-border
  ),
  warning: (
    bg: $btn-warning-bg,
    color: $btn-warning-color,
    border: $btn-warning-border
  ),
  danger: (
    bg: $btn-danger-bg,
    color: $btn-danger-color,
    border: $btn-danger-border
  )
);

// Undo `:focus` styles from Bootstrap.
// On Electron, the user can click and press over a button,
// then move the mouse away from the button and release,
// and the button will erroneusly keep the `:focus` state style.
@each $style in map-keys($btn-types-styles) {
  .btn-#{$style}:focus {
    $btn-styles: map-get($btn-types-styles, $style);
    background-color: map-get($btn-styles, "bg");
    color: map-get($btn-styles, "color");
    border-color: map-get($btn-styles, "border");
  }
}

/*
 * Remove blue/orange outline
 * !important is needed here for some reason
 * despite the rule having top precedence.
 */
button.btn:focus {
  outline: none !important;
}

---
name: test release
# https://github.com/product-os/flowzone/tree/master/.github/actions
inputs:
  json:
    description: 'JSON stringified object containing all the inputs from the calling workflow'
    required: true
  secrets:
    description: 'JSON stringified object containing all the secrets from the calling workflow'
    required: true

  # --- custom environment
  NODE_VERSION:
    type: string
    default: '20.10'
  VERBOSE:
    type: string
    default: 'true'

runs:
  # https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
  using: 'composite'
  steps:
    # https://github.com/actions/setup-node#caching-global-packages-data
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.NODE_VERSION }}
        cache: npm

    - name: Install host dependencies
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update && sudo apt-get install -y --no-install-recommends xvfb libudev-dev
        cat < package.json | jq -r '.hostDependencies[][]' - | \
          xargs -L1 echo | sed 's/|//g' | xargs -L1 \
          sudo apt-get --ignore-missing install || true

    - name: Install host dependencies
      if: runner.os == 'macOS'
      # FIXME: Python 3.12 dropped distutils that node-gyp depends upon.
      # This is a temporary workaround to make the job use Python 3.11 until
      # we update to npm 10+.
      uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4
      with:
        python-version: '3.11'

    - name: Setup Virtual Drive on MacOS
      if: runner.os == 'macOS'
      shell: bash
      run: |
        hdiutil create -size 4096m -layout NONE -o virtual_test_disk.dmg
        virtual_path=$(hdiutil attach -nomount virtual_test_disk.dmg | awk '{print $1}')
        echo "TARGET_DRIVE=${virtual_path}" >> $GITHUB_ENV
        echo "ETCHER_INCLUDE_VIRTUAL_DRIVES=1" >> $GITHUB_ENV

    - name: Test release
      shell: bash
      run: |
        # Build and Test release

        ## FIXME: causes issues with `xxhash` which tries to load a debug build which doens't exist and cannot be compiled
        # if [[ '${{ inputs.VERBOSE }}' =~ on|On|Yes|yes|true|True ]]; then
        #   export DEBUG='electron-forge:*,sidecar'
        # fi

        npm ci

        # as the shrinkwrap might have been done on mac/linux, this is ensure the package is there for windows
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          npm i -D winusb-driver-generator
        fi

        npm run lint
        npm run package
        
        # tests requires the app to already be built

        # # only run e2e tests on Mac as it's the only supported platform atm
        if [[ '${{ runner.os }}' == 'macOS' ]]; then
          # run all tests on macOS including E2E
          # E2E tests can't input the administrative password, therefore the tests need to run as root
          wget -q -O ${{ env.TEST_SOURCE_FILE }} ${{ env.TEST_SOURCE_URL }}
          sudo \
            TARGET_DRIVE=${{ env.TARGET_DRIVE }} \
            ETCHER_INCLUDE_VIRTUAL_DRIVES=1 \
            TEST_SOURCE_FILE: $(pwd)/${{ env.TEST_SOURCE_FILE }} \
            TEST_SOURCE_URL: ${{ env.TEST_SOURCE_URL }} \
            npm run wdio:ci
        else
          npm run wdio:unit
        fi
        
      env:
        # https://www.electronjs.org/docs/latest/api/environment-variables
        ELECTRON_NO_ATTACH_CONSOLE: 'true'
        TEST_SOURCE_URL: 'https://api.balena-cloud.com/download?deviceType=raspberrypi4-64&version=5.2.8&fileType=.zip'
        TEST_SOURCE_FILE: 'raspberrypi4-64-5.2.8-v16.1.10.img.zip'

    - name: Compress custom source
      if: runner.os != 'Windows'
      shell: bash
      run: tar -acf ${{ runner.temp }}/custom.tgz .

    - name: Compress custom source
      if: runner.os == 'Windows'
      shell: pwsh
      run: C:\"Program Files"\Git\usr\bin\tar.exe --force-local -acf ${{ runner.temp }}\custom.tgz .

    - name: Upload custom artifact
      uses: actions/upload-artifact@v4
      with:
        name: custom-${{ github.event.pull_request.head.sha || github.event.head_commit.id }}-${{ runner.os }}-${{ runner.arch }}
        path: ${{ runner.temp }}/custom.tgz
        retention-days: 1
